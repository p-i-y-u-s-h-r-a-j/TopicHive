<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Lazy"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.SubredditDto"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.example.demo.service.SubredditService"/>
    <fullyQualifiedTypeName name="jakarta.transaction.Transactional"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="org.hibernate.mapping.Collection"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="com.example.demo.mapper.SubredditMapper"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="com.example.demo.service.AuthService"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.SubredditRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.mapper.PostMapper"/>
    <fullyQualifiedTypeName name="com.example.demo.model.Subreddit"/>
    <fullyQualifiedTypeName name="com.example.demo.exception.SubredditNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AnonymousAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.PostResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.Jwt"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.PostRequest"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.UserRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.mapper.CommentMapper"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.CommentRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.model.Comment"/>
    <fullyQualifiedTypeName name="com.example.demo.model.NotificationEmail"/>
    <fullyQualifiedTypeName name="com.example.demo.model.User"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.PostRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.VoteRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.model.Post"/>
    <fullyQualifiedTypeName name="com.example.demo.exception.PostNotFoundException"/>
    <fullyQualifiedTypeName name="com.example.demo.model.Vote"/>
    <fullyQualifiedTypeName name="com.example.demo.model.VoteType"/>
    <fullyQualifiedTypeName name="com.example.demo.service.VoteService"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.VoteDto"/>
    <fullyQualifiedTypeName name="com.example.demo.service.CommentService"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.CommentsDto"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="jakarta.validation.Valid"/>
    <fullyQualifiedTypeName name="com.example.demo.dto.RefreshTokenRequest"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.RefreshTokenRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.model.RefreshToken"/>
    <fullyQualifiedTypeName name="com.example.demo.exception.SpringRedditException"/>
    <fullyQualifiedTypeName name="com.example.demo.service.RefreshTokenService"/>
</qualifiedTypeNameHistroy>
